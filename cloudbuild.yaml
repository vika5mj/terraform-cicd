substitutions:
  _ENV: ""

steps:
- id: 'validate'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      echo "branch $BRANCH_NAME"
      echo "REPOOOOOOOO -- $REPO_NAME"
      echo "run init"
      cd ${_ENV}
      terraform init
      echo "run validate"
      terraform validate
      echo "check backend connection"
      terraform providers


- id: 'tf plan'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      echo "run plan and save to GCS bucket"
      cd ${_ENV}
      terraform plan -out terraform.plan

- id: 'zip plan'
  name: 'gcr.io/cloud-builders/gsutil'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      echo "Zipping terraform.plan..."
      zip terraform-artifacts.zip ${_ENV}/terraform.plan ${_ENV}/.terraform ${_ENV}/main.tf

# Step to copy the plan file to a GCS bucket using gsutil
- id: 'upload plan to GCS'
  name: 'gcr.io/cloud-builders/gsutil'
  args:
  - 'cp'
  - 'terraform-artifacts.zip'
  - 'gs://my-test-bucketdevops9700/$BRANCH_NAME/${_ENV}/$COMMIT_SHA/terraform-artifacts.zip'
### steps to push to pubsub
- id: 'publish-pubsub'
  name: 'gcr.io/cloud-builders/gcloud'
  args:
  - 'pubsub'
  - 'topics'
  - 'publish'
  - 'cd-trigger-topic'
  - '--message'
  - '{"_BRANCH_NAME":"$BRANCH_NAME", "_ENV":"$_ENV", "_COMMIT_SHA":"$COMMIT_SHA"}'

# - id: 'tf apply'
#   name: 'hashicorp/terraform:1.0.0'
#   entrypoint: 'sh'
#   args:
#   - '-c'
#   - |
#       echo "apply the plan from GCS bucket"
#       cd ${_ENV}
#       terraform apply -auto-approve terraform.plan
options:
  logging: CLOUD_LOGGING_ONLY
